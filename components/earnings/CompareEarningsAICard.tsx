import React from "react";
import { TrendingUp, Shield, Lightbulb, Sprout, TriangleAlert } from "lucide-react";
import { useCompareFilings } from "@/lib/client/queries/compareFilings";
import { ReportRowDTO } from "@/types";
import LoaderComponent from "../general/LoaderComponent";

interface CompareEarningsAICardProps {
  currentReportA: ReportRowDTO | null;
  currentReportB: ReportRowDTO | null;
}

const CompareEarningsAICard = ({ currentReportA, currentReportB }: CompareEarningsAICardProps) => {
  const {
    data: compareData,
    isLoading: isLoadingCompare,
    isFetching: isFetchingCompare,
  } = useCompareFilings(currentReportA, currentReportB, false);

  return (
    <>
      {!!compareData ? (
        <LoaderComponent
          className="bg-(--secondary-color) p-4 rounded-lg"
          loading={isLoadingCompare || isFetchingCompare}
          height="auto"
          width="100%"
          rounded="lg"
        >
          <h2 className="font-bold text-xl mb-4">{`${compareData?.comparisonTitle} - Comparison Analysis`}</h2>
          <div className="min-h-[200px]">
            {compareData ? (
              <div className="flex flex-col gap-4">
                <div>
                  <div className="items-center gap-2 mb-1 flex">
                    <TrendingUp color="var(--accent-color)" />
                    <h3 className="font-bold text-lg">Growth Momentum</h3>
                  </div>
                  <p className="text-(--secondary-text-color)">
                    {compareData.aiVerdict.growthEdge}
                  </p>
                </div>
                <div>
                  <div className="items-center gap-2 mb-1 flex">
                    <Shield color="var(--danger-color)" />
                    <h3 className="font-bold text-lg ">Risk & Consistency</h3>
                  </div>
                  <p className="text-(--secondary-text-color)">
                    {compareData.aiVerdict.stabilityEdge}
                  </p>
                </div>
                <div>
                  <div className="items-center gap-2 mb-1 flex">
                    <Lightbulb color="yellow" />
                    <h3 className="font-bold text-lg ">Analysis Verdict</h3>
                  </div>
                  <p className="text-(--secondary-text-color)">
                    {compareData.aiVerdict.overallOutlook}
                  </p>
                </div>
                <div>
                  <div className="items-center gap-2 mb-1 flex">
                    <Sprout color="var(--success-color)" />
                    <h3 className="font-bold text-lg ">For Growth Investors</h3>
                  </div>
                  <p className="text-(--secondary-text-color)">
                    {compareData.aiVerdict.investmentSummary.momentumInvestors}
                  </p>
                </div>
                <div>
                  <div className="items-center gap-2 mb-1 flex">
                    <TriangleAlert color="var(--warning-color)" />
                    <h3 className="font-bold text-lg">For Conservative Investors</h3>
                  </div>
                  <p className="text-(--secondary-text-color)">
                    {compareData.aiVerdict.investmentSummary.riskAverseInvestors}
                  </p>
                </div>
                <div className="flex justify-end">
                  <p className="text-xs text-(--secondary-text-color) italic">
                    *This analysis is generated by AI and should be used for informational purposes
                    only.
                  </p>
                </div>
              </div>
            ) : (
              <p className="text-(--secondary-text-color)">No comparison data available.</p>
            )}
          </div>
        </LoaderComponent>
      ) : null}
    </>
  );
};

export default CompareEarningsAICard;
